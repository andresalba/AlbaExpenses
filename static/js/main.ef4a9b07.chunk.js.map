{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","ExpensesFilter","props","className","value","selected","onChange","event","onChangeFilter","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","charDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","exp","toString","selectedYear","ExpenseForm","newTitle","setNewTitle","newAmount","setNewAmount","newDate","setNewDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","console","log","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","newExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ef4a9b07.chunk.js","sourcesContent":["import './Card.css';\r\n\r\nfunction Card(props){\r\n    const classes = 'card' + props.className;\r\n\r\n    return <div className={classes}>{props.children}</div>;\r\n}\r\n\r\nexport default Card;","import React from 'react';\n\nimport './ExpensesFilter.css';\n\nconst ExpensesFilter = (props) => {\n  const dropdownChangeHandler = (event) => {\n    props.onChangeFilter(event.target.value);\n  };\n\n  return (\n    <div className='expenses-filter'>\n      <div className='expenses-filter__control'>\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={dropdownChangeHandler}>\n          <option value='2022'>2022</option>\n          <option value='2021'>2021</option>\n          <option value='2020'>2020</option>\n          <option value='2019'>2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import './ExpenseDate.css';\r\n\r\nfunction ExpenseDate(props){\r\n    const month = props.date.toLocaleString('en-US', {month:'long'});\r\n    const day = props.date.toLocaleString('en-US', {day:'2-digit'});\r\n    const year = props.date.getFullYear();\r\n    \r\n    return(\r\n        <div className=\"expense-date\">\r\n            <div className=\"expense-date__month\">{month}</div>\r\n            <div className=\"expense-date__year\">{year}</div>\r\n            <div className=\"expense-date__day\">{day}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExpenseDate;","import ExpenseDate from './ExpenseDate';\r\nimport './ExpenseItem.css';\r\nimport Card from '../UI/Card';\r\n\r\nfunction ExpenseItem(props){\r\n\r\n    return(\r\n        <div className=\"expense-item\">\r\n            <ExpenseDate date={props.date}/>\r\n            <div className=\"expense-item__description\">\r\n                <h2>{props.title}</h2>\r\n                <div className=\"expense-item__price\">{props.amount}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExpenseItem;","import './ExpensesList.css';\r\nimport ExpenseItem from './ExpenseItem';\r\n\r\nconst ExpensesList = (props) => {\r\n\r\n    if(props.items.length === 0){\r\n        return <h2 className=\"expenses-list__fallback\">No expenses found</h2>\r\n    }\r\n\r\n    return (\r\n        <ul className=\"expenses-list\">\r\n            {props.items.map((expense) => <ExpenseItem title = {expense.title} amount = {expense.amount} date = {expense.date} key={expense.id} />)}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default ExpensesList;","import './ChartBar.css';\r\n\r\nconst ChartBar = (props) => {\r\n\r\n    let barFillHeight = '0%';\r\n\r\n    if(props.maxValue > 0){\r\n        barFillHeight = Math.round((props.value/props.maxValue)*100) + '%';\r\n    }\r\n\r\n    return (\r\n        <div className=\"chart-bar\">\r\n            <div className=\"chart-bar__inner\">\r\n                <div className=\"chart-bar__fill\" style={{height: barFillHeight}}></div>\r\n            </div>\r\n            <div className=\"chart-bar__label\">{props.label}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChartBar;","import './Chart.css';\r\nimport ChartBar from './ChartBar';\r\n\r\nconst Chart = (props) => {\r\n\r\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value)\r\n    const totalMaximum = Math.max(...dataPointValues);\r\n\r\n    return (\r\n        <div className=\"chart\">\r\n            {props.dataPoints.map((dataPoint) => (\r\n            <ChartBar \r\n            key={dataPoint.label} \r\n            value={dataPoint.value} \r\n            maxValue={totalMaximum} \r\n            label={dataPoint.label} />))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chart;","import Chart from '../Chart/Chart';\r\n\r\nconst ExpensesChart = (props) => {\r\n\r\n    const charDataPoints = [\r\n        { label: 'Jan', value: 0},\r\n        { label: 'Feb', value: 0},\r\n        { label: 'Mar', value: 0},\r\n        { label: 'Apr', value: 0},\r\n        { label: 'May', value: 0},\r\n        { label: 'Jun', value: 0},\r\n        { label: 'Jul', value: 0},\r\n        { label: 'Aug', value: 0},\r\n        { label: 'Sep', value: 0},\r\n        { label: 'Oct', value: 0},\r\n        { label: 'Nov', value: 0},\r\n        { label: 'Dec', value: 0}\r\n    ];\r\n\r\n    for(const expense of props.expenses){\r\n        const expenseMonth = expense.date.getMonth();\r\n        charDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n\r\n    return (\r\n        <Chart dataPoints={charDataPoints} />\r\n    );\r\n};\r\n\r\nexport default ExpensesChart;","import './Expenses.css';\r\nimport Card from '../UI/Card';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport ExpensesList from './ExpensesList';\r\nimport ExpensesChart from './ExpensesChart';\r\nimport { useState } from 'react';\r\n\r\nfunction Expenses(props){\r\n\r\n    const [filteredYear, setFilteredYear] = useState('2020');\r\n\r\n    const filterChangeHandler = (selectedYear) =>{\r\n        setFilteredYear(selectedYear);\r\n    }\r\n\r\n    const filteredExpenses = props.items.filter(exp => {return exp.date.getFullYear().toString() == filteredYear});\r\n\r\n    return(\r\n        <li>\r\n            <div className=\"expenses\">\r\n                <ExpensesFilter selected={filteredYear} onChangeFilter={filterChangeHandler}/>\r\n                <ExpensesChart expenses={filteredExpenses} />\r\n                <ExpensesList items = {filteredExpenses} />\r\n            </div>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default Expenses;","import './ExpenseForm.css';\r\nimport { useState } from 'react';\r\n\r\nfunction ExpenseForm(props){\r\n\r\n    const [newTitle, setNewTitle] = useState('');\r\n    const [newAmount, setNewAmount] = useState('');\r\n    const [newDate, setNewDate] = useState('');\r\n\r\n    const titleChangeHandler = (event) => {\r\n        console.log(event.target.value);\r\n        setNewTitle(event.target.value);\r\n    }\r\n    const amountChangeHandler = (event) => {\r\n        console.log(event.target.value);\r\n        setNewAmount(event.target.value);\r\n    }\r\n    const dateChangeHandler = (event) => {\r\n        console.log(event.target.value);\r\n        setNewDate(event.target.value);\r\n    }\r\n\r\n    const submitHandler = (event) =>{\r\n        event.preventDefault();\r\n        const expenseData = {\r\n            title: newTitle,\r\n            amount: +newAmount,\r\n            date: new Date(newDate)\r\n        };\r\n        props.onSaveExpenseData(expenseData);//se envía la info al parent\r\n        setNewTitle('');\r\n        setNewAmount('');\r\n        setNewDate('');\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={submitHandler}>\r\n            <div className=\"new-expense__controls\">\r\n                <div className=\"new-expense__control\">\r\n                    <label>Title</label>\r\n                    <input type=\"text\" value={newTitle} onChange={titleChangeHandler} />\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Amount</label>\r\n                    <input type=\"number\" min=\"0.01\" step=\"0.01\" value={newAmount} onChange={amountChangeHandler} />\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Date</label>\r\n                    <input type=\"date\" min=\"2019-01-01\" max=\"2045-01-01\" value={newDate} onChange={dateChangeHandler} />\r\n                </div>\r\n            </div>\r\n\t\t\t<div className=\"new-expense__actions\">\r\n                <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n\t\t\t\t<button type=\"submit\">Add Expense</button>\r\n\t\t\t</div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default ExpenseForm;","import './NewExpense.css';\r\nimport ExpenseForm from './ExpenseForm';\r\nimport { useState } from 'react';\r\n\r\nfunction NewExpense(props){\r\n\r\n    const [isEditing, setIsEditing] = useState(false);\r\n\r\n    const  SaveExpenseDataHandler = (newExpenseData) =>{\r\n        const expenseData = {\r\n            ...newExpenseData,\r\n            id : Math.random().toString()\r\n        };\r\n        console.log('El valor en NewExpense es',expenseData);\r\n        props.onAddExpense(expenseData);//se envía la info al parent\r\n        setIsEditing(false);\r\n    }\r\n\r\n    const startEditingHandler = () =>{\r\n        setIsEditing(true);\r\n    }\r\n\r\n    const stopEditingHandler = () =>{\r\n        setIsEditing(false);\r\n    }\r\n\r\n    return(\r\n        <div className=\"new-expense\">\r\n        {/*<div className=\"new-expense\">\r\n            {!isEditing && <button onClick={startEditingHandler}>Add new expense</button>}\r\n            {isEditing && <ExpenseForm onSaveExpenseData={SaveExpenseDataHandler} onCancel={stopEditingHandler}/>}\r\n        </div>*/}\r\n        {isEditing ? <ExpenseForm onSaveExpenseData={SaveExpenseDataHandler} onCancel={stopEditingHandler}/> :\r\n                     <button onClick={startEditingHandler}>Add new expense</button>\r\n        }\r\n        </div>  \r\n    );\r\n}\r\n\r\nexport default NewExpense;","import Expenses from './components/Expenses/Expenses';\nimport NewExpense from './components/NewExpense/NewExpense';\nimport React, { useState } from 'react';\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) =>{\n    console.log('El valor en App es',expense);\n    setExpenses((prevExpenses)=>{return [expense, ...prevExpenses];});\n  }\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items = {expenses}/>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}